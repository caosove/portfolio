package product;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;


public class ProductDAO extends JdbcDAO {
	private static ProductDAO _dao;
	
	public ProductDAO() {
		// TODO Auto-generated constructor stub
	}
	
	static {
		_dao = new ProductDAO();
	}
	
	public static ProductDAO getDAO() {
		return _dao;
	}
	
	//제품등록 메소드
	public int addProdType1(ProductDTO product) {
		Connection con = null;
		PreparedStatement pstmt = null;
		int rows = 0;		
		try {
			con = getConnection();			
			String sql = "insert into product_shopping values(SEQ_PTYPE01.nextval+1,?,?,?,?,?,100,sysdate,?)";
			pstmt = con.prepareStatement(sql);
			pstmt.setString(1, product.getpType());
			pstmt.setString(2, product.getpName());
			pstmt.setString(3, product.getpCategory());
			pstmt.setString(4, product.getpExp());
			pstmt.setInt(5, product.getpPrice());
			pstmt.setString(6, product.getpImage());			
			rows = pstmt.executeUpdate();	
		} catch (SQLException e) {
			System.out.println("[에러] addProdType1() 메소드의 SQL 오류 : " + e.getMessage());
		} finally {
			close(con, pstmt);
		}		
		return rows;
	}
	public int addProdType2(ProductDTO product) {
		Connection con = null;
		PreparedStatement pstmt = null;
		int rows = 0;		
		try {
			con = getConnection();			
			String sql = "insert into product_shopping values(SEQ_PTYPE02.nextval+1,?,?,?,?,?,100,sysdate,?)";
			pstmt = con.prepareStatement(sql);
			pstmt.setString(1, product.getpType());
			pstmt.setString(2, product.getpName());
			pstmt.setString(3, product.getpCategory());
			pstmt.setString(4, product.getpExp());
			pstmt.setInt(5, product.getpPrice());
			pstmt.setString(6, product.getpImage());			
			rows = pstmt.executeUpdate();	
		} catch (SQLException e) {
			System.out.println("[에러] addProdType2() 메소드의 SQL 오류 : " + e.getMessage());
		} finally {
			close(con, pstmt);
		}		
		return rows;
	}
	public int addProdType3(ProductDTO product) {
		Connection con = null;
		PreparedStatement pstmt = null;
		int rows = 0;		
		try {
			con = getConnection();			
			String sql = "insert into product_shopping values(SEQ_PTYPE03.nextval+1,?,?,?,?,?,100,sysdate,?)";
			pstmt = con.prepareStatement(sql);
			pstmt.setString(1, product.getpType());
			pstmt.setString(2, product.getpName());
			pstmt.setString(3, product.getpCategory());
			pstmt.setString(4, product.getpExp());
			pstmt.setInt(5, product.getpPrice());
			pstmt.setString(6, product.getpImage());			
			rows = pstmt.executeUpdate();
		} catch (SQLException e) {
			System.out.println("[에러] addProdType3() 메소드의 SQL 오류 : " + e.getMessage());
		} finally {
			close(con, pstmt);
		}		
		return rows;
	}
	public int addProdType4(ProductDTO product) {
		Connection con = null;
		PreparedStatement pstmt = null;
		int rows = 0;		
		try {
			con = getConnection();			
			String sql = "insert into product_shopping values(SEQ_PTYPE04.nextval+1,?,?,?,?,?,100,sysdate,?)";
			pstmt = con.prepareStatement(sql);
			pstmt.setString(1, product.getpType());
			pstmt.setString(2, product.getpName());
			pstmt.setString(3, product.getpCategory());
			pstmt.setString(4, product.getpExp());
			pstmt.setInt(5, product.getpPrice());
			pstmt.setString(6, product.getpImage());			
			rows = pstmt.executeUpdate();
		} catch (SQLException e) {
			System.out.println("[에러] addProdType4() 메소드의 SQL 오류 : " + e.getMessage());
		} finally {
			close(con, pstmt);
		}		
		return rows;
	}
	
	//전체상품 검색
	public List<ProductDTO> getProductList() {
		Connection con = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		List<ProductDTO> productList = new ArrayList<>();
		
		
		try {
			con = getConnection();
			String sql = "select * from product_shopping order by P_ID desc";
			pstmt = con.prepareStatement(sql);
			
			rs = pstmt.executeQuery();
			while (rs.next()) {
				ProductDTO product = new ProductDTO();
				product.setpID(rs.getInt("p_ID"));
				product.setpType(rs.getString("p_Type"));
				product.setpName(rs.getString("p_Name"));
				product.setpCategory(rs.getString("p_Category"));
				product.setpExp(rs.getString("p_Exp"));
				product.setpPrice(rs.getInt("p_Price"));
				product.setpInv(rs.getInt("p_Inv"));
				product.setpDate(rs.getString("p_Date"));
				product.setpImage(rs.getString("p_Image"));
				
				productList.add(product);
				
			}			
		} catch (SQLException e) {
			System.out.println("[에러] getProductList() 메소드의 SQL 오류 : " + e.getMessage());
		} finally {
			close(con, pstmt, rs);
		}		
		return productList;
	}
	
	//제품코드를 전달받아 PRODUCT 테이블의 저장 유무를 검색하여 반환하는 메소드
	// => 미검색 : false 반환, 검색 : true 반환
	public boolean isProduct(int pID) {
		Connection con=null;
		PreparedStatement pstmt=null;
		ResultSet rs=null;
		boolean result=false;
		try {
			con=getConnection();
			
			String sql = "select * from product_shopping where P_ID=?";
			pstmt=con.prepareStatement(sql);
			pstmt.setInt(1, pID);
			
			rs=pstmt.executeQuery();
			
			/*
			if(rs.next()) {
				result=true;
			}
			*/
			
			result=rs.next();
		} catch (SQLException e) {
			System.out.println("[에러]isProduct() 메소드의 SQL 오류 = "+e.getMessage());
		} finally {
			close(con, pstmt, rs);
		}
		return result;
	}
}
